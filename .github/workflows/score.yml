name: Scoring code quality

on:
  push:
    branches:
      - feedback
  workflow_dispatch:

jobs:
  score-code:
    runs-on: ${{ matrix.os }}-latest
    permissions:
      contents: read
      pull-requests: write
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        os: ["ubuntu"]
    continue-on-error: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup Miniconda
        id: setup-miniconda
        run: |
          ./setup.sh

      - name: Check code quality
        id: linting
        run: |
          pip install pylint
          MESSAGE=$(./lint.sh)

          echo 'MESSAGE<<EOF' >> $GITHUB_ENV
          echo "<pre><code>$MESSAGE</code></pre>" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

          echo "Printing PR message: $MESSAGE"

      - name: Post report to pull request
        uses: mshick/add-pr-comment@v2
        with:
          message: ${{ env.MESSAGE }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for reproducibility
        run: |
          ./reproduce.sh
